stages:
  - ci
  - unit test
  - build test
  - e2e test
  - deployment
  - triggers

variables:
  CLI_VERSION: 10.1.6
  GIT_STRATEGY: clone

.connect_gcr: &connect_gcr
  before_script:
    - echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
    - gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
    - docker login -u _json_key --password-stdin https://gcr.io < ${HOME}/gcloud-service-key.json

unit test and lint:
  stage: unit test
  image: trion/ng-cli-karma:${CLI_VERSION}
  script:
    - cd angular-project
    - npm ci
    - ng lint
    - ng test --code-coverage --progress false --watch false
  coverage: '/^Statements\s*:\s*([^%]+)/'

build a testing image:
  <<: *connect_gcr
  stage: build test
  image: juanpabloaj/docker-compose-google-cloud-sdk:latest
  script:
    - docker-compose -f docker-compose.yml build --no-cache testing
    - docker-compose -f docker-compose.yml push testing

e2e robotframework:
  <<: *connect_gcr
  stage: e2e test
  image: juanpabloaj/docker-compose-google-cloud-sdk:latest
  script:
    - docker pull gcr.io/zwcsce/mcl-otec-db:latest
    - docker pull gcr.io/zwcsce/api-sigo:develop
    - docker pull gcr.io/zwcsce/mcl-otec-webclient:latest-testing
    - docker-compose -f docker-compose.yml down -v
    - docker-compose -f docker-compose.yml rm mcl_test_sigo_web mcl_test_sigo_db mcl_test_sigo_api
    - docker-compose -f docker-compose.yml build --no-cache mcl_test_sigo_web mcl_e2e_robotframework
    - docker-compose -f docker-compose.yml up -d mcl_test_sigo_db
    - docker-compose -f docker-compose.yml up -d mcl_test_sigo_api
    - docker-compose -f docker-compose.yml up -d mcl_test_sigo_web
    # - docker-compose -p ${CI_PIPELINE_ID} run dockerize-test-waiting
    - sleep 60
    - docker-compose -f docker-compose.yml run mcl_e2e_robotframework
  # after_script:
  #   - docker-compose -f docker-compose.yml down -v
  tags:
    - docker_sigo

docker:
  <<: *connect_gcr
  stage: deployment
  image: juanpabloaj/docker-compose-google-cloud-sdk:latest
  script:
    - docker-compose -f docker-compose.yml build --no-cache deploy
    - docker-compose -f docker-compose.yml push deploy
  only:
    - tags
    - develop

update-demos-sigo:
  stage: triggers
  variables:
    ORIGIN: $ORIGIN
    CI_PIPELINE_ID: $CI_PIPELINE_ID
    PRECURSOR: $CI_PROJECT_NAME
  trigger: zweicom/cl-movistar/sigo/demos-sigo
  only:
    - develop
